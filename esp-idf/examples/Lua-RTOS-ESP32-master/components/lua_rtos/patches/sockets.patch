diff --git a/components/lwip/include/lwip/lwip/sockets.h b/components/lwip/include/lwip/lwip/sockets.h
index 4dd013bc..e3ea372b 100755
--- a/components/lwip/include/lwip/lwip/sockets.h
+++ b/components/lwip/include/lwip/lwip/sockets.h
@@ -428,12 +428,13 @@ typedef struct ip_mreq {
 /* FD_SET used for lwip_select */
 #ifndef FD_SET
 #undef  FD_SETSIZE
+#define FD_ADD_SETSIZE (16 * 4) + 1
 /* Make FD_SETSIZE match NUM_SOCKETS in socket.c */
-#define FD_SETSIZE    MEMP_NUM_NETCONN
+#define FD_SETSIZE    MEMP_NUM_NETCONN + FD_ADD_SETSIZE
 #define FDSETSAFESET(n, code) do { \
-  if (((n) - LWIP_SOCKET_OFFSET < MEMP_NUM_NETCONN) && (((int)(n) - LWIP_SOCKET_OFFSET) >= 0)) { \
+  if (((n) - LWIP_SOCKET_OFFSET < MEMP_NUM_NETCONN + FD_ADD_SETSIZE) && (((int)(n) - LWIP_SOCKET_OFFSET) >= 0)) { \
   code; }} while(0)
-#define FDSETSAFEGET(n, code) (((n) - LWIP_SOCKET_OFFSET < MEMP_NUM_NETCONN) && (((int)(n) - LWIP_SOCKET_OFFSET) >= 0) ?\
+#define FDSETSAFEGET(n, code) (((n) - LWIP_SOCKET_OFFSET < MEMP_NUM_NETCONN + FD_ADD_SETSIZE) && (((int)(n) - LWIP_SOCKET_OFFSET) >= 0) ?\
   (code) : 0)
 #define FD_SET(n, p)  FDSETSAFESET(n, (p)->fd_bits[((n)-LWIP_SOCKET_OFFSET)/8] |=  (1 << (((n)-LWIP_SOCKET_OFFSET) & 7)))
 #define FD_CLR(n, p)  FDSETSAFESET(n, (p)->fd_bits[((n)-LWIP_SOCKET_OFFSET)/8] &= ~(1 << (((n)-LWIP_SOCKET_OFFSET) & 7)))
 diff --git a/components/lwip/include/lwip/posix/netdb.h b/components/lwip/include/lwip/posix/netdb.h
index 12d4c7f5..681b4a10 100755
--- a/components/lwip/include/lwip/posix/netdb.h
+++ b/components/lwip/include/lwip/posix/netdb.h
@@ -31,3 +31,4 @@
  */
 
 #include "lwip/netdb.h"
+#include "lwip/sys/netdb.h"
diff --git a/components/lwip/port/freertos/sys_arch.c b/components/lwip/port/freertos/sys_arch.c
index aa58f9bb..a1567c53 100755
--- a/components/lwip/port/freertos/sys_arch.c
+++ b/components/lwip/port/freertos/sys_arch.c
@@ -440,8 +440,6 @@ sys_init(void)
 
     // Create the pthreads key for the per-thread semaphore storage
     pthread_key_create(&sys_thread_sem_key, sys_thread_sem_free);
-
-    esp_vfs_lwip_sockets_register();
 }
 
 /*-----------------------------------------------------------------------------------*/
diff --git a/components/lwip/port/vfs_lwip.c b/components/lwip/port/vfs_lwip.c
index aa623f01..1d0d1fc7 100644
--- a/components/lwip/port/vfs_lwip.c
+++ b/components/lwip/port/vfs_lwip.c
@@ -42,6 +42,8 @@ int lwip_socket_offset;
 static int lwip_fcntl_r_wrapper(int fd, int cmd, va_list args);
 static int lwip_ioctl_r_wrapper(int fd, int cmd, va_list args);
 
+extern int __real_lwip_select(int maxfdp1, fd_set *readset, fd_set *writeset, fd_set *exceptset, struct timeval *timeout);
+
 void esp_vfs_lwip_sockets_register()
 {
     esp_vfs_t vfs = {
@@ -53,6 +55,8 @@ void esp_vfs_lwip_sockets_register()
         .read = &lwip_read_r,
         .fcntl = &lwip_fcntl_r_wrapper,
         .ioctl = &lwip_ioctl_r_wrapper,
+        .writev = &lwip_writev,
+       .select = __real_lwip_select,
     };
     int max_fd;
 
@@ -73,5 +77,3 @@ static int lwip_ioctl_r_wrapper(int fd, int cmd, va_list args)
 {
     return lwip_ioctl_r(fd, cmd, va_arg(args, void *));
 }
-
-
